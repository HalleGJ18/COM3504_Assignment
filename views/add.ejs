<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel="manifest" href="/manifest.json">

    <script src="/javascripts/index.js"></script>
</head>
<body onload="getLocation()">

<% include ../public/partials/header.ejs %>
<h1 class="text-center p-2"><%= title %></h1>

<div class="card mb-3 w-75 mx-auto">
    <div class="card-body">
        <h3 class="card-title">Add sighting</h3>
        <form id=â€œxForm" enctype="multipart/form-data" method="post" action="/add">
            <div class="form-group">
                <label for='birdname'>Bird name:</label>
                <input type="text" name="birdname" id="birdname" value="Wood Pigeon" class="form-control">
            </div>

            <div class="form-group">
                <label for='date'>Date:</label>
                <input type="datetime-local" name="date" id="date" value="2023-01-01T08:30" class="form-control">
            </div>

            <div class="form-group">
                <label for='Location'>Location:</label>
                <input type="text" name="location" id="location" value="United Kingdom" class="form-control">
            </div>

            <div class="form-group">
                <label for='Description'>Description:</label>
                <input type="text" name="description" id="description" value="A beautiful Birdo!" class="form-control">
            </div>

            <div class="form-group">
                <label for="myImage">Choose an image</label>

                <div>
                    <input type="file" id="myImage" name="myImg" accept="image/*" required class="form-control">
                </div>
            </div>

            <div class="form-group">
                <label for="identification">Select knowledge graph entry</label>

                <button type="button" id="searchBird" class="btn btn-primary">Find bird</button>
                <button type="button" id="selectBird" class="btn btn-primary">Select bird</button>

                <select id="identification" name="identification" class="form-control">
                </select>

            </div>

            <div class="form-group">
                <input type="hidden" name="identifiedName" id="identifiedName" value="" class="form-control">
            </div>

            <div class="form-group">
                <input type="hidden" name="abstract" id="abstract" value="" class="form-control">
            </div>

            <div class="form-group">
                <input type="hidden" name="uri" id="uri" value="" class="form-control">
            </div>

            <div class="form-group">
                <input type="hidden" name="addedBy" id="addedBy" value="" class="form-control">
            </div>

            <div class="form-group">
                <input type="submit" name="g" value="Submit" id="g" class="btn btn-primary">
            </div>
        </form>
        <div id="results" style="margin-top:30px"></div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<script>
    function getValueFromObjectStore(dbName, storeName, key) {
        return new Promise((resolve, reject) => {
            // Open the database
            const request = indexedDB.open(dbName);

            request.onerror = () => {
                reject(new Error('Failed to open database'));
            };

            request.onsuccess = () => {
                const db = request.result;

                // Start a transaction and retrieve the object store
                const transaction = db.transaction(storeName, 'readonly');
                const objectStore = transaction.objectStore(storeName);

                const countRequest = objectStore.count();
                countRequest.onsuccess = () => {
                    console.log(countRequest.result);
                    const getRequest = objectStore.get(countRequest.result);

                    getRequest.onerror = () => {
                        reject(new Error('Failed to retrieve value from object store'));
                    };

                    getRequest.onsuccess = () => {
                        const value = getRequest.result;

                        if (value) {
                            resolve(value);
                        } else {
                            reject(new Error('Value not found in object store'));
                        }
                    };
                };
            };

            request.onupgradeneeded = () => {
                reject(new Error('Database upgrade needed'));
            };
        });
    }

    getValueFromObjectStore('UserInformation', 'users', 1)
        .then(value => {
            console.log('Retrieved value:', value['username']);
            document.getElementById('addedBy').value = value['username'];

        })
        .catch(error => {
            console.error('Error retrieving value:', error);
        });

</script>

<script src="/javascripts/knowledgeGraph.js"></script>

<script>

    function removeAllChildNodes(parent) {
        while (parent.firstChild) {
            parent.removeChild(parent.firstChild);
        }
    }


    let searchKnowledge = document.getElementById('searchBird');
    let knowledge;
    function populateDropdown() {
        // console.log("search knowledge graph")
        let birdName = document.getElementById("birdname").value
        console.log(birdName)
        if (birdName) {
            queryKnowledgeGraph(birdName)
                .then( knowledge => {
                    console.log("results")
                    console.log(knowledge)

                    // clear dropdown
                    const dropdown = document.getElementById("identification");
                    removeAllChildNodes(dropdown);

                    // populate dropdown
                    for (let entry in knowledge) {
                        insertOption(knowledge[entry], entry)
                    }
                })
        }

    }
    searchKnowledge.addEventListener('click', populateDropdown);



    // event listener on submit button to put knowledge graph data in hidden fields
    // let submitButton = document.getElementById('g');
    let selectBird = document.getElementById('selectBird')

    function submitKnowledge() {
        let identity = parseInt(document.getElementById('identification').value)

        let birdName = document.getElementById("birdname").value
        // console.log(birdName)
        if (birdName) {
            queryKnowledgeGraph(birdName)
                .then( knowledge => {
                    // console.log("results")
                    // console.log(knowledge)

                    // get selected
                    let selected = knowledge[identity]
                    // console.log(selected)

                    // find hidden fields

                    document.getElementById('identifiedName').value = selected.name.value
                    document.getElementById('abstract').value = selected.abstract.value
                    document.getElementById('uri').value = selected.bird.value

                })
        }
    }

    selectBird.addEventListener('click', submitKnowledge)

</script>

</body>

</html>