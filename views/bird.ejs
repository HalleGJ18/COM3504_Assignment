<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel="manifest" href="/manifest.json">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <script src="/javascripts/index.js"></script>
</head>

<body onload="init(<%= JSON.stringify(birdData._id) %>, <%= JSON.stringify(historyMessages) %>)">
<% include ../public/partials/header.ejs %>

<h1 class="text-center p-2">Sighting details for <%= birdData.bird_name %></h1>

<div class="d-flex w-75 mx-auto">
    <div class="card mb-3 w-75 mx-auto">
        <div class="card-body">
            <img class="card-img-top" src="<%= birdData.img %>" alt="Card image cap">
        </div>
    </div>
    <div class="card mb-3 w-75 mx-auto">
        <div class="card-body">
            <h2 class="card-title"><%= birdData.bird_name %></h2>
            <p class="card-text">Date sighted: <%= new Date(birdData.date).toLocaleString() %></p>
            <p class="card-text">Location: <%= birdData.location %></p>
            <p class="card-text">Description: <%= birdData.description %></p>
            <p class="card-text">Identification: (knowledge graph result here)</p>
            <p class="card-text">Added by: <%= birdData.addedBy %></p>
            <!--        <p class="card-text"><small class="text-muted">hello</small></p>-->
        </div>
    </div>
</div>



<div class="card mb-3 w-75 mx-auto">
    <div class="card-body">

        <h3 class="card-body">Chat for <%= birdData.bird_name %>:</h3>

        <div id="chat_interface">
            <div>
                <div id="who_you_are" style="display: inline"></div>, you are in room: <div id="in_room" style="display: inline"></div>
            </div>
            <div id="history" class="boxed"></div>
            <div id="input" class="bottom boxed">
                <form onsubmit="return false;" style="width: 100%">
                    <p>
                        <label for="name"> chat: </label>
                        <input type="text" id="chat_input" name="chat_input" style="width: 80%">
                        <button class="btn btn-secondary btn-sm" id="chat_send" onclick="sendChatText()">Send</button>
                    </p>
                </form>
            </div>
        </div>

    </div>
</div>





<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<script>
    function getValueFromObjectStore(dbName, storeName, key) {
        return new Promise((resolve, reject) => {
            // Open the database
            const request = indexedDB.open(dbName);

            request.onerror = () => {
                reject(new Error('Failed to open database'));
            };

            request.onsuccess = () => {
                const db = request.result;

                // Start a transaction and retrieve the object store
                const transaction = db.transaction(storeName, 'readonly');
                const objectStore = transaction.objectStore(storeName);

                const countRequest = objectStore.count();
                countRequest.onsuccess = () => {
                    console.log(countRequest.result);
                    const getRequest = objectStore.get(countRequest.result);

                    getRequest.onerror = () => {
                        reject(new Error('Failed to retrieve value from object store'));
                    };

                    getRequest.onsuccess = () => {
                        const value = getRequest.result;

                        if (value) {
                            resolve(value);
                        } else {
                            reject(new Error('Value not found in object store'));
                        }
                    };
                };
            };

            request.onupgradeneeded = () => {
                reject(new Error('Database upgrade needed'));
            };
        });
    }

    getValueFromObjectStore('UserInformation', 'users', 1)
        .then(value => {
            console.log('Retrieved value:', value['username']);
            document.getElementById('addedBy').value = value['username'];

        })
        .catch(error => {
            console.error('Error retrieving value:', error);
        });

</script>


</body>
</script>
</html>